# -*- coding: utf-8 -*-
"""paraphrasingTool.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VsGu8rqljsXIDdH0Ipl9q0sebBu9l8G6
"""

import nltk
from nltk.corpus import wordnet
import random

nltk.download('punkt')
nltk.download('averaged_perceptron_tagger')
nltk.download('wordnet')

# Function to replace a word with a synonym from WordNet
def replace_word_with_synonym(word):
    synonyms = []
    for syn in wordnet.synsets(word):
        for lemma in syn.lemmas():
            synonyms.append(lemma.name())

    if synonyms:
        return random.choice(synonyms)
    else:
        return word

# Function to paraphrase a sentence
def paraphrase_sentence(sentence):
    words = nltk.word_tokenize(sentence)
    tags = nltk.pos_tag(words)
    paraphrased_words = []

    for word, tag in tags:
        if tag.startswith('NN'):
            # Keep nouns unchanged
            paraphrased_words.append(word)
        else:
            # Replace other words with synonyms
            paraphrased_words.append(replace_word_with_synonym(word))

    return ' '.join(paraphrased_words)

# Function to paraphrase a paragraph
def paraphrase_paragraph(paragraph):
    sentences = nltk.sent_tokenize(paragraph)
    paraphrased_sentences = [paraphrase_sentence(sentence) for sentence in sentences]
    return ' '.join(paraphrased_sentences)

if __name__ == "__main__":
    input_paragraph = input("Enter the paragraph you want to paraphrase:\n")
    paraphrased_paragraph = paraphrase_paragraph(input_paragraph)

    print("\nParaphrased Paragraph:")
    print(paraphrased_paragraph)